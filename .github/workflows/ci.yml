name: Continuous Integration

on: [push]

permissions:
  checks: write
  pull-requests: write
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install junitparser
          pip install pyinstaller

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install

      - name: Run Tests
        run: |
          mkdir test-results
          poetry run python -m test.run_all_tests

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: ./test-results/results.xml

      - name: Build executable
        if: success() && github.ref == 'refs/heads/main'
        run: |
          pyinstaller --onefile compiler/JackAnalyzer.py
          mv dist/JackAnalyzer dist/compiler_n2t

      - name: Create Tag
        if: success() && github.ref == 'refs/heads/main'
        id: create_tag
        run: |
          TAG_NAME="v$(date -u +'%Y%m%dT%H%M%S')"
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          git tag $TAG_NAME
          git push origin $TAG_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Github Release
        if: success() && github.ref == 'refs/heads/main'
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/compiler_n2t
          tag_name: ${{ env.TAG_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}